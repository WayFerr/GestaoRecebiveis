// <auto-generated />
using System;
using GestaoRecebiveisAPI.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoRecebiveisAPI.Infra.Migrations
{
    [DbContext(typeof(GestaoRecebiveisAPIContext))]
    partial class GestaoRecebiveisAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestaoRecebiveisAPI.Domain.Entidades.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaId"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<decimal>("FaturamentoMensal")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RamoAtividadeId")
                        .HasColumnType("int");

                    b.HasKey("EmpresaId");

                    b.HasIndex("RamoAtividadeId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("GestaoRecebiveisAPI.Domain.Entidades.NotaFiscal", b =>
                {
                    b.Property<int>("NotaFiscalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotaFiscalId"));

                    b.Property<DateTime>("DtVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(16,2)");

                    b.HasKey("NotaFiscalId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("NotasFiscais");
                });

            modelBuilder.Entity("GestaoRecebiveisAPI.Domain.Entidades.RamoDeAtividade", b =>
                {
                    b.Property<int>("RamoAtividadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RamoAtividadeId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RamoAtividadeId");

                    b.ToTable("RamosDeAtividade");

                    b.HasData(
                        new
                        {
                            RamoAtividadeId = 1,
                            Descricao = "Produtos"
                        },
                        new
                        {
                            RamoAtividadeId = 2,
                            Descricao = "Serviços"
                        });
                });

            modelBuilder.Entity("GestaoRecebiveisAPI.Domain.Entidades.Empresa", b =>
                {
                    b.HasOne("GestaoRecebiveisAPI.Domain.Entidades.RamoDeAtividade", "RamoDeAtividade")
                        .WithMany("Empresas")
                        .HasForeignKey("RamoAtividadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RamoDeAtividade");
                });

            modelBuilder.Entity("GestaoRecebiveisAPI.Domain.Entidades.NotaFiscal", b =>
                {
                    b.HasOne("GestaoRecebiveisAPI.Domain.Entidades.Empresa", "Empresa")
                        .WithMany("NotasFiscais")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("GestaoRecebiveisAPI.Domain.Entidades.Empresa", b =>
                {
                    b.Navigation("NotasFiscais");
                });

            modelBuilder.Entity("GestaoRecebiveisAPI.Domain.Entidades.RamoDeAtividade", b =>
                {
                    b.Navigation("Empresas");
                });
#pragma warning restore 612, 618
        }
    }
}
